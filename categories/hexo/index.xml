<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/feed_style.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="https://www.rssboard.org/media-rss">
  <channel>
    <title>hexo on sorgDream&#39;s Blog</title>
    <link>https://blog.sorgdream.com/categories/hexo/</link>
    <description>Recent content in hexo on sorgDream&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>sorgDream - [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/)</copyright>
    <lastBuildDate>Sun, 17 Sep 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.sorgdream.com/categories/hexo/index.xml" rel="self" type="application/rss+xml" /><icon>https://blog.sorgdream.com/avatar.jpg</icon>
    
    
    <item>
      <title>Next主题进阶配置</title>
      <link>https://blog.sorgdream.com/posts/next/</link>
      <pubDate>Sun, 17 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.sorgdream.com/posts/next/</guid>
      <description><![CDATA[<p>最近比较忙，一方面刚开学，另一方面是因为butterfly加载速度太慢，转向next主题，很多东西需要重新配置；这篇文章与其说是教程，不如说是一篇记录</p>
<h2 id="next主题">Next主题</h2>
<blockquote>
<p>🎉 Elegant and powerful theme for Hexo.</p>
</blockquote>
<p>一个黑白为主色调的主题，很多人使用，却没有一个完整的中文教程；你能在Github上搜到三个next</p>
<ul>
<li><a href="https://github.com/next-theme/hexo-theme-next">hexo-theme/hexo-theme-next</a></li>
<li><a href="https://github.com/theme-next/hexo-theme-next">theme-hexo/hexo-theme-next</a></li>
<li><a href="https://github.com/iissnan/hexo-theme-next">iissnan</a></li>
</ul>
<p>我推荐使用第一个，也就是<strong>hexo-theme/hex-theme-next</strong> 因为讨论的人多，版本也是最新的
<!-- raw HTML omitted -->目前next还没有一个统一的教程，网上也有三篇不同的教程</p>
<ul>
<li><a href="https://hexo-next.readthedocs.io/zh_CN/latest/">Hexo-Next</a>优点是支持中文，比较完善，缺点是没有官方内容多</li>
<li><a href="http://theme-next.iissnan.com/">Next使用文档</a>同样支持中文，但是覆盖和内容没有上一个全</li>
<li><a href="https://theme-next.js.org/">Next</a>应该是官方文档，覆盖最全，但不支持中文</li>
</ul>
<p>以上三个文档建议第一和第三混合看，第二个因为有点过时可以不看</p>
<h3 id="评论">评论</h3>
<p>一个好的博客必定不能缺少评论系统，目前有许多解决方案可供选择，但我认为最方便，快捷的还是<a href="https://utteranc.es/">utterances</a></p>
<h4 id="utterances">utterances</h4>
<blockquote>
<p>A lightweight comments widget built on GitHub issues.</p>
</blockquote>
<ul>
<li>以下以utt来代替utterances</li>
</ul>
<p>作者尝试在butterfly主题中使用valine，但最终以失败告终，尝试gitalk同样因token被墙而失败，最后发现了这个宝藏评论系统</p>
<ol>
<li>要使用utt，我们首先要创建一个仓库，必须要是公开的，然后我们需要安装<a href="https://github.com/apps/utterances"> utterances app</a>到我们的仓库</li>
<li>然后到了选择Blog Post ↔️ Issue Mapping 推荐<strong>Issue title contains page title</strong> 不容易混淆</li>
<li>最后编辑Next的<code>_config.yml</code>中的<strong>utterances</strong></li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yml" data-lang="yml"><span style="display:flex;"><span><span style="color:#f92672">utterances</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">enable</span>: <span style="color:#66d9ef">true</span>   <span style="color:#75715e">#将false改为true</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">repo</span>: <span style="color:#ae81ff">user-name/repo-name</span> <span style="color:#75715e"># 填入自己的仓库</span>
</span></span><span style="display:flex;"><span>  <span style="color:#75715e"># Available values: pathname | url | title | og:title</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">issue_term</span>: <span style="color:#ae81ff">title </span> <span style="color:#75715e">#设置为title</span>
</span></span><span style="display:flex;"><span>  <span style="color:#75715e"># Available values: github-light | github-dark | preferred-color-scheme | github-dark-orange | icy-dark | dark-blue | photon-dark | boxy-light</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">theme</span>: <span style="color:#ae81ff">github-light</span>
</span></span></code></pre></div><p>完成后，使用<code>hexo s --debug</code>本地预览博客，看是否出现评论框</p>
<h3 id="文章关闭评论">文章关闭评论</h3>
<p>设置完后默认会在所有page开启评论，如果想关闭分类或关于里的评论，可以在index.md中设定<code>comments: false</code>即可关闭</p>
<h3 id="友链">友链</h3>
<p>Next主题自带的友链位于侧边栏，但人数一旦多起来便会拥挤不堪，于是参考<a href="https://blog.fufu.ink/2023/05/improvefdlinks.html#waline">浮生若梦</a>的教程 <del>在他的基础上删去了过期和推荐</del> 大佬更新了配置，现在可以直接从yml读取配置</p>
<blockquote>
<p>又更新了
之前要看 html 代码、改源代码，太麻烦了。
仿照 butterfly 的友链书写方式做成变量都从 yml 中读取了</p>
</blockquote>
<ol>
<li>首先在你<code>Next文件夹/layout</code>中创建一个名为<code>links.njk</code>的文件，写入以下内容</li>
</ol>
<pre tabindex="0"><code class="language-njk" data-lang="njk">    {##################}
    {### LINKS BLOCK ###}
    {##################}

&lt;style&gt;
    @media (min-width: 768px) {
        .link-card {
            width: 50%;
            float: left;
        }
    }
    .link-card{
        position: relative;
        min-height: 1px;
        padding-right: 15px;
        padding-left: 15px;
        box-sizing: border-box;
    }
    .link-user-list{
        margin-bottom: 5px;
        border-radius: 3px;
        padding: 15px;
        display: block;
        box-shadow: 0 2px 6px rgba(0,0,0,.1);
        position: relative;
    }
    .link-user-list:hover{
        background-color: #f6f8f8;
        text-decoration: none;
    }
    #link-container a{
        border: none;
    }
    .user-avatar img{
        border: 2px solid #fff;
        height: auto;
        vertical-align: middle;
        width: 100%;
        border-radius: 20%;
        max-width: 100%!important;
        margin: 0px !important;
    }
    .clearfix:after{
        content: &#39; &#39;; 
        display: block; 
        height: 0; 
        clear: both; 
        visibility: hidden;
    }
    .text-ellipsis{
        display: block;
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
        font-size: 13px;
    }
    .user-message{
        display: block;
        overflow: hidden;
    }
    .user-description{
        color: #a0a0a0;
    }
    .user-avatar{
        display: inline-block;
        width: 52px;
        height: auto;
        float: left !important;
        margin-right: 15px;
        position: relative;
        white-space: nowrap;
    }
&lt;/style&gt;
&lt;div id=&#34;link-container&#34;&gt;
    {% for link_config in site.data.links %}
    {% if link_config.class_name %}
    &lt;h2 id=&#34;{{ link_config.class_name }}&#34;&gt;
        &lt;a href=&#34;#{{ link_config.class_name }}&#34; class=&#34;headerlink&#34; title=&#34;{{ link_config.class_name }}&#34; data-pjax-state&gt;&lt;/a&gt;
        {{ link_config.class_name }}
    &lt;/h2&gt;
    {% else %}
    &lt;hr&gt;
    {% endif %}
    &lt;div class=&#34;clearfix&#34;&gt;
    {% for link in link_config.link_list %}
    &lt;div class=&#34;link-card&#34;&gt;
        &lt;a href=&#34;{{ link.site }}&#34; target=&#34;_blank&#34; class=&#34;link-user-list&#34;&gt;
            &lt;span class=&#34;user-avatar&#34;&gt;
                &lt;img src=&#34;{{ link.avatar }}&#34; class=&#34;nofancybox&#34;&gt;
            &lt;/span&gt;
            &lt;span class=&#34;user-message&#34;&gt;
                &lt;span class=&#34;text-ellipsis&#34;&gt;{{ link.nickname }}&lt;/span&gt;
                &lt;span class=&#34;user-description text-ellipsis&#34;&gt;{{ link.info }}&lt;/span&gt;
            &lt;/span&gt;
        &lt;/a&gt;
    &lt;/div&gt;
    {% endfor %}
    &lt;/div&gt;
    {% endfor %}

    &lt;div&gt;
    {{ page.content }}
    &lt;/div&gt;
&lt;/div&gt;
    {######################}
    {### END LINKS BLOCK ###}
    {######################}
</code></pre><p>然后再打开<code>Next文件夹/layout/page.njk</code> ，在<code>block title</code>区域中的<code>{{- __('title.schedule') + page_title_suffix }}</code>后面添加上两行</p>
<pre tabindex="0"><code class="language-njk" data-lang="njk">{% block title %}
  {%- set page_title_suffix = &#39; | &#39; + title %}

  {%- if page.type === &#39;categories&#39; and not page.title %}
    {{- __(&#39;title.category&#39;) + page_title_suffix }}
  {%- elif page.type === &#39;tags&#39; and not page.title %}
    {{- __(&#39;title.tag&#39;) + page_title_suffix }}
  {%- elif page.type === &#39;schedule&#39; and not page.title %}
    {{- __(&#39;title.schedule&#39;) + page_title_suffix }}
+  {%- elif page.type === &#39;links&#39; and not page.title %}
+    {{- __(&#39;title.links&#39;) + page_title_suffix }}
  {%- else %}
    {{- page.title + page_title_suffix }}
  {%- endif %}
{% endblock %}
</code></pre><p>接下来在下面的<code>PAGE BODY</code>中添加</p>
<pre tabindex="0"><code class="language-njk" data-lang="njk">{### PAGE BODY ###}
      {#################}
      &lt;div class=&#34;post-body{% if page.direction and page.direction.toLowerCase() === &#39;rtl&#39; %} rtl{% endif %}&#34;&gt;
        {%- if page.type === &#39;tags&#39; %}
          {%- include &#39;_partials/page/tags.njk&#39; -%}
        {% elif page.type === &#39;categories&#39; %}
          {%- include &#39;_partials/page/categories.njk&#39; -%}
        {% elif page.type === &#39;schedule&#39; %}
          {%- include &#39;_partials/page/schedule.njk&#39; -%}
+        {% elif page.type === &#39;links&#39; %}
+          {%- include &#39;links.njk&#39; -%}
        {% else %}
          {{ page.content }}
        {%- endif %}
      &lt;/div&gt;
      {#####################}
      {### END PAGE BODY ###}
      {#####################}
</code></pre><p>接下来和创建tags、about页一样，使用<code>hexo new page links</code>创建一个新页面，修改<code>index.md</code>添加申请信息和其他你想写在友链里的，设置type为links</p>
<p>最后在<code>hexo/source/</code>创建一个目录<code>_data</code>，里面再创建一个<code>links.yml</code>文件并填入以下内容</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yml" data-lang="yml"><span style="display:flex;"><span><span style="color:#75715e"># 参数说明</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># class_name 选填，可以理解为友链组的名字，如果不填则会在顶部生成一个分割线</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># nickname 博客名称</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># site 博客地址</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># info 博客简介</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># avatar 博客logo</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e"># 填写时注意缩进！</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>- <span style="color:#f92672">class_name</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">link_list</span>:
</span></span><span style="display:flex;"><span>    - <span style="color:#f92672">nickname</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">site</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">info</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">avatar</span>:
</span></span><span style="display:flex;"><span>    - <span style="color:#f92672">nickname</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">site</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">info</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">avatar</span>:
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span>- <span style="color:#f92672">class_name</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">link_list</span>:
</span></span><span style="display:flex;"><span>    - <span style="color:#f92672">nickname</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">site</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">info</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">avatar</span>:
</span></span><span style="display:flex;"><span>    - <span style="color:#f92672">nickname</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">site</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">info</span>:
</span></span><span style="display:flex;"><span>      <span style="color:#f92672">avatar</span>:
</span></span></code></pre></div><p>然后找到<strong>Menu</strong>区域，按照格式增加一个友链页面；完成后找到<code>languages/zh-CN.yml</code>，在Menu区域中添加友链的汉化</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yml" data-lang="yml"><span style="display:flex;"><span><span style="color:#f92672">links</span>: <span style="color:#ae81ff">友链</span>
</span></span></code></pre></div><p>即可完成配置，以后想增加友链只需要在<code>_config.yml</code>中增添信息即可</p>
<h3 id="随笔">随笔</h3>
<p>有时我们可能想说点什么，但太短了成不了文章，于是我打算创建一个随笔页，专门记录短篇的文章</p>
<ol>
<li>使用<code>hexo new page essay</code>创建一个随笔页</li>
<li>修改<code>source/essay/index.md</code>里的内容，修改标题并添加上<code>type: essay</code></li>
<li>在主题配置文件中的<strong>Menu</strong>区域添加上随笔页</li>
<li>在<code>languages/zh-CN.yml</code>中添加友链的翻译即可</li>
</ol>
<p>之后我们就可以在index.md中写文章了，但是看空想大佬的说说比我要好看，大佬没公布教程，我也没敢直接要，只能用折中的办法了</p>
<h2 id="域名绑定">域名绑定</h2>
<p>因为.xyz续费太贵，本身对这个域名也不是很满意，于是，一天前，我重新注册了一个新的域名<code>inuya.ltd</code>，并将他与我的博客绑定</p>
<ol>
<li>要绑定域名，我们首先设置一个CNAME解析，将它指向原本的博客链接，再设置一个AAAA，通过<code>ping username.github.io</code>获取ipv6地址</li>
<li>然后在你博客的<code>source</code>目录创建一个名为<code>CNAME</code>的文件，填入你的域名</li>
<li>在你的设置中找到page/Custom domain，填入你的域名，点击save即可</li>
</ol>
<p>设置完后使用原本的username.github.io会重定向到你的网站；尝试用你的域名访问，看能否访问成功</p>
<h2 id="google收录">Google收录</h2>
<p>因为next的配置里带有收录的配置，所以我们只要选择HTML标记
<!-- raw HTML omitted -->将<code>content=</code>后面的内容复制到主题<code>_config.yml</code>中的<code>google_site_verification:</code></p>
<p>然后再使用<code>hexo clean &amp;&amp; hexo g</code> <code>hexo d</code>部署到Github即可完成验证，bing同理</p>
<h2 id="参考引用">参考|引用</h2>
<ul>
<li><a href="https://blog.csdn.net/Mancuojie/article/details/119906071">【Hexo】域名绑定篇</a></li>
<li><a href="https://blog.fufu.ink/2023/05/improvefdlinks.html">空想笔记</a></li>
</ul>]]></description>
      
    </item>
    
    
    
    <item>
      <title>hexo建立个人博客并部署到GitHub</title>
      <link>https://blog.sorgdream.com/posts/hexo/</link>
      <pubDate>Sat, 12 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.sorgdream.com/posts/hexo/</guid>
      <description><![CDATA[<h2 id="介绍">介绍</h2>
<p>hexo是什么</p>
<blockquote>
<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他标记语言）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。</p>
</blockquote>
<p>fluid是什么</p>
<blockquote>
<p>Fluid 是基于 Hexo 的一款 Material Design 风格的主题</p>
</blockquote>
<h2 id="开始">开始</h2>
<p>推荐搭配<a href="https://hexo.io/zh-cn/index.html">官方文档</a>一起看</p>
<p>本教程基于Linux环境，作者用的是Debian12，window环境请搜索别的教程</p>
<ol>
<li>使用以下命令安装<strong>git</strong></li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>sudo apt-get install git-core
</span></span></code></pre></div><ol start="2">
<li>安装<strong>Node.js</strong>
下载并导入 Nodesource GPG 密钥</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>sudo apt-get update
</span></span><span style="display:flex;"><span>sudo apt-get install -y ca-certificates curl gnupg
</span></span><span style="display:flex;"><span>sudo mkdir -p /etc/apt/keyrings
</span></span><span style="display:flex;"><span>curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg
</span></span></code></pre></div><p>创建 deb 存储库</p>
<blockquote>
<p>NODE_MAJOR可以根据需要的版本进行更改</p>
</blockquote>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>NODE_MAJOR<span style="color:#f92672">=</span><span style="color:#ae81ff">21</span>
</span></span><span style="display:flex;"><span>echo <span style="color:#e6db74">&#34;deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_</span>$NODE_MAJOR<span style="color:#e6db74">.x nodistro main&#34;</span> | sudo tee /etc/apt/sources.list.d/nodesource.list
</span></span></code></pre></div><p>更新并安装</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>sudo apt-get update
</span></span><span style="display:flex;"><span>sudo apt-get install nodejs -y
</span></span></code></pre></div><ol start="3">
<li>安装<strong>hexo</strong></li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>npm install -g hexo-cli
</span></span></code></pre></div><ol start="4">
<li>安装完成后选择一个目录新建所需文件，作者这里用<code>hexo</code>文件夹</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>hexo init &lt;folder&gt;   <span style="color:#75715e">#新建所选目录</span>
</span></span><span style="display:flex;"><span>cd &lt;folder&gt;
</span></span><span style="display:flex;"><span>npm install
</span></span></code></pre></div><h3 id="主题">主题</h3>
<p>到这里基本的安装已经完成，作者安装fluid主题，当然，别的也可以</p>
<ol start="5">
<li>
<p>到<a href="https://github.com/fluid-dev/hexo-theme-fluid/releases">fluid</a>下载最新的<strong>source code.tar.gz</strong></p>
</li>
<li>
<p>使用<code>tar -zxvf xxxxx.tar.gz</code>解压</p>
</li>
<li>
<p>然后将解压完的文件重命名为<strong>fliud</strong></p>
</li>
<li>
<p>将它移动到第四步你设定的目录下的<strong>themes</strong>文件夹</p>
</li>
<li>
<p>修改hexo根目录下的<code>_config.yml</code>文件，设定主题</p>
</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yml" data-lang="yml"><span style="display:flex;"><span><span style="color:#f92672">theme</span>: <span style="color:#ae81ff">fluid</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">language</span>: <span style="color:#ae81ff">zh-CN</span>
</span></span></code></pre></div><ol start="10">
<li>根据主题的教程，这时候我们需要创建一个关于页</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>hexo new page about
</span></span></code></pre></div><ol start="11">
<li>创建后修改<code>/source/about/index.md</code>的内容，添加<code>layout</code>属性</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-md" data-lang="md"><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>title: 你的标题
</span></span><span style="display:flex;"><span>layout: about
</span></span><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>#下面写正文
</span></span></code></pre></div><p>其他的请看<a href="https://hexo.fluid-dev.com/docs/start/">用户手册</a>，就不细说了</p>
<ol start="12">
<li>配置好主题后我们生成一个本地的预览网页</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>hexo s
</span></span></code></pre></div><p>输入<code>http://localhost:4000</code>就能看到生成的预览，注意只能本机访问</p>
<ol start="13">
<li>默认的文章是hello world,你可以使用<code>hexo n &quot;标题&quot;</code>来新建博客，包括初始的hello world ，都在<code>source/_posts</code>目录，如果想删掉文章，直接用rm命令就行</li>
</ol>
<h3 id="目录介绍">目录介绍</h3>
<table>
<thead>
<tr>
<th>source/_posts</th>
<th>存放文章</th>
</tr>
</thead>
<tbody>
<tr>
<td>public</td>
<td>生成的html</td>
</tr>
<tr>
<td>themes</td>
<td>存放主题</td>
</tr>
<tr>
<td>_config.yml</td>
<td>配置文件，主题文件夹里的是主题的配置文件</td>
</tr>
</tbody>
</table>
<h2 id="部署到github">部署到Github</h2>
<p>因为本地启动之能我们自己看，要想让别人也看到就要部署到GitHub或者绑定域名</p>
<p>其他托管网站也行，比如gitee，只是方法有点不同，这里用GitHub</p>
<ol>
<li>确保你安装了<strong>git</strong>执行以下命令配置git</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>git config --global user.name <span style="color:#e6db74">&#34;你的Github用户名&#34;</span>  <span style="color:#75715e">#冒号不用删</span>
</span></span><span style="display:flex;"><span>git config --global user.email <span style="color:#e6db74">&#34;你的Github邮箱&#34;</span>
</span></span></code></pre></div><ol start="2">
<li>配置完后开始生成密钥</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>ssh-keygen -t rsa -C <span style="color:#e6db74">&#34;你的Github邮箱&#34;</span>
</span></span></code></pre></div><p>默认三个全回车就行，完成后会生成<strong>id_rsa.pub</strong></p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>cat ~/.ssh/id_rsa.pub  <span style="color:#75715e">#查看密钥</span>
</span></span></code></pre></div><ol start="3">
<li>复制<strong>ssh</strong>开头的输出，打开GitHub，找到<code>settings-SSH and GPG Keys</code> 选择<code>add new</code>名字随便取，在ssh里填入你刚刚复制的内容，点击添加</li>
<li>执行以下命令，会询问你是否连接，输入<strong>yes</strong>后如果有<code>Hi xxx! You’ve successfully authenticated…</code>就代表连接成功</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>ssh -T git@github.com
</span></span></code></pre></div><ol start="5">
<li>再去创建一个名为<code>用户名.github.io</code>的仓库，选项默认就行</li>
<li>回到hexo，vim编辑<code>_config.yml</code>文件，修改<strong>deploy</strong></li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yml" data-lang="yml"><span style="display:flex;"><span><span style="color:#f92672">deploy</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">type</span>: <span style="color:#ae81ff">git</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">repo</span>: <span style="color:#ae81ff">git@github.com:你的用户名/你的用户名.github.io.git</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">branch</span>: <span style="color:#ae81ff">master</span>
</span></span></code></pre></div><ol start="7">
<li>修改完后用以下命令生成并部署到GitHub</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>hexo clean <span style="color:#75715e">#清理缓存</span>
</span></span><span style="display:flex;"><span>hexo g  <span style="color:#75715e">#生成静态网页</span>
</span></span><span style="display:flex;"><span>hexo d  <span style="color:#75715e">#部署到GitHub</span>
</span></span></code></pre></div><ol start="8">
<li>完成后再浏览器里访问<code>用户名.github.io</code>如果没有404，那就成功了</li>
</ol>
<p>如果出现<code>extends includes/layout.pug block content include includes/recent-posts.pug include includes/partial</code>，可以尝试安装</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>npm install --save hexo-renderer-jade hexo-generator-feed hexo-generator-sitemap hexo-browsersync hexo-generator-archive
</span></span></code></pre></div><h2 id="基础写作">基础写作</h2>
<p>开始写文章前需要设定几个参数，我这里列举几个比较常用的</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-md" data-lang="md"><span style="display:flex;"><span>---
</span></span><span style="display:flex;"><span>title: #你的标题
</span></span><span style="display:flex;"><span>date: #写作日期
</span></span><span style="display:flex;"><span>tags: #标签
</span></span><span style="display:flex;"><span>categories: #分类
</span></span><span style="display:flex;"><span>updated: #更新日期
</span></span><span style="display:flex;"><span>---
</span></span></code></pre></div><p>如果想添加多个tags，可以用<code>[tags1,tags2,tags3]</code>来设定</p>
<h2 id="迁移至新电脑">迁移至新电脑</h2>
<p>如果换电脑或重装系统，只需保留</p>
<pre tabindex="0"><code>_config.yml #配置文件
themes #主题文件夹
_config.&lt;themename&gt;.yml #如果有
package.json #插件列表
package-lock.json 
source #文章
scaffolds 
db.json
</code></pre><p>将文件移入hexo文件夹，使用<code>npm install</code>安装插件</p>
<h2 id="参考">参考</h2>
<p><a href="https://zhuanlan.zhihu.com/p/552639819">2022【保姆级教程】含泪搭建hexo博客</a></p>
<p><a href="https://hexo.io/zh-cn/">hexo文档</a></p>
<p><a href="https://blog.csdn.net/weixin_44318830/article/details/104884936">CSDN-大数据梦想家</a></p>]]></description>
      
    </item>
    
    
    
    <item>
      <title>google/bing收录</title>
      <link>https://blog.sorgdream.com/posts/google.bing/</link>
      <pubDate>Fri, 11 Aug 2023 00:00:00 +0000</pubDate>
      
      <guid>https://blog.sorgdream.com/posts/google.bing/</guid>
      <description><![CDATA[<p>博客目前已被bing和google收录，bing的点击率比google要多，我们的<del>网站真是蒸蒸日上</del></p>
<h2 id="bing">Bing</h2>
<ol>
<li>来到<a href="https://www.bing.com/webmasters">必应网站管理员工具</a> ，用你喜欢的方式登录</li>
<li>然后点击添加网站，验证的话作者选择的是下载xml文件，Google也可以用相同的方法</li>
<li>将下载的xml文件直接拖动到mobaxterm，就可以通过网络传输，也可以使用<code>scp</code>命令,不过scp适合两台Linux主机之间互传文件，所以我们还需要安装wsl来配置Linux环境，这里就不细说了，下面是scp命令传输文件的方式</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>scp xxxxxx.xml  xxxx@ip:/home/xxxx/     <span style="color:#75715e">#其中第一个xxxx要换成你需要传的文件名，第二个换成被传主机的用户名，ip就不用说了，：后面就是你要传到的路径</span>
</span></span></code></pre></div><ol start="4">
<li>将bing的xml文件放在<strong>hexo</strong>的<strong>source</strong>目录下</li>
<li>使用以下命令生成并部署到GitHub</li>
</ol>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>hexo clean   <span style="color:#75715e">#清理缓存</span>
</span></span><span style="display:flex;"><span>hexo g   <span style="color:#75715e">#生成</span>
</span></span><span style="display:flex;"><span>hexo d  <span style="color:#75715e">#部署</span>
</span></span></code></pre></div><p>完成后等一会就可以点击验证，确认没问题就可以进入管理界面</p>
<h2 id="网站地图">网站地图</h2>
<p>这里最好添加一个网站地图，能提高爬虫率和加快收录</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>npm install hexo-generator-sitemap --save <span style="color:#75715e">#安装</span>
</span></span><span style="display:flex;"><span>hexo clean   
</span></span><span style="display:flex;"><span>hexo g
</span></span><span style="display:flex;"><span>hexo d
</span></span></code></pre></div><p>在添加到bing之前最好先测试下，在你的博客地址后添加<code>/sitemap.xml</code>并访问，比如
<a href="https://xxxxxx.github.io/sitemap.xml">https://xxxxxx.github.io/sitemap.xml</a></p>
<p><!-- raw HTML omitted -->如果不是404，有输出结果那就是成功了，接下来只需要将它添加到bing的网站地图即可</p>
<h2 id="google">Google</h2>
<p>Google和bing差不多，但比bing多一步，而且还要挂代理，稍微麻烦了些</p>
<ol>
<li>同样的，访问<a href="https://search.google.com/search-console">Google Search Console</a>使用你的谷歌账户登录</li>
<li>选择网址前缀，下载Google的<code>html</code>文件，跟bing一样，也是放在<code>soure</code>文件夹，不过是文件按不一样罢了，但是部署到GitHub之前需要加多一条命令，这里引用<a href="https://javahikers.github.io/2019/06/16/personal-blog-being-included-in-google/">javahiker</a>的解释</li>
</ol>
<blockquote>
<p>hexo会将source目录下的文件googlexxxx.html打包到public目录.这个过程中googlexxxx.html的内容被hexo修改了，如果直接部署到我们的网站，google那边会验证不通过。而打包的过程中是不会修改source下的googlexxxx.html文件的，所以可以通过命令行将未被修改的文件googlexxxx.html拷贝过去。这样就能通过google的验证了。</p>
</blockquote>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>hexo clean
</span></span><span style="display:flex;"><span>hexo g
</span></span><span style="display:flex;"><span>cp source/googlexxxxxx.html public/  <span style="color:#75715e">#直接复制到public目录</span>
</span></span><span style="display:flex;"><span>hexo d
</span></span></code></pre></div><p>完成后等一会点击验证即可成功</p>
<h2 id="永久链接">永久链接</h2>
<p>如果我们修改文章的标题或是创建时间，引索过的网页就会404,需要重新爬网，解决办法就是创建永久链接</p>
<p>我们使用<code>hexo-abbrlink</code>这个插件来实现</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>npm install hexo-abbrlink --save <span style="color:#75715e">#安装插件</span>
</span></span></code></pre></div><p>安装完成后修改hexo根目录下的<code>_config.yml</code>配置文件</p>
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-yml" data-lang="yml"><span style="display:flex;"><span><span style="color:#75715e"># URL</span>
</span></span><span style="display:flex;"><span><span style="color:#75715e">## Set your site url here. For example, if you use GitHub Page, set url as &#39;https://username.github.io/project&#39;</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">url</span>: <span style="color:#ae81ff">http://xxxxx.github.io  </span> <span style="color:#75715e">#自己的网址</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">permalink</span>: :<span style="color:#ae81ff">year-:month-:day/:abbrlink.html </span> <span style="color:#75715e">#链接形式</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">abbrlink</span>:  
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">alg</span>: <span style="color:#ae81ff">crc32 </span> <span style="color:#75715e">#算法</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">rep</span>: <span style="color:#ae81ff">hex  </span> <span style="color:#75715e">#进制</span>
</span></span><span style="display:flex;"><span><span style="color:#f92672">permalink_defaults</span>:
</span></span><span style="display:flex;"><span><span style="color:#f92672">pretty_urls</span>:
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">trailing_index</span>: <span style="color:#66d9ef">true</span> <span style="color:#75715e"># Set to false to remove trailing &#39;index.html&#39; from permalinks</span>
</span></span><span style="display:flex;"><span>  <span style="color:#f92672">trailing_html</span>: <span style="color:#66d9ef">true</span> <span style="color:#75715e"># Set to false to remove trailing &#39;.html&#39; from permalinks</span>
</span></span></code></pre></div><p>链接形式：hexo默认的形式是<code>year/:month/:day/:title/</code>，我这里改为<code>year-:month-:day/:abbrlink.html</code></p>
<p>比如<code>https://inuyasha-660.github.io/2023-08-11/21353.html</code>也就是这篇文章的链接</p>]]></description>
      
    </item>
    
    
  </channel>
</rss>

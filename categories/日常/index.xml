<?xml version="1.0" encoding="utf-8" standalone="yes"?><?xml-stylesheet href="/feed_style.xsl" type="text/xsl"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:media="https://www.rssboard.org/media-rss">
  <channel>
    <title>日常 on sorgDream&#39;s Blog</title>
    <link>https://blog.sorgdream.com/categories/%E6%97%A5%E5%B8%B8/</link>
    <description>Recent content in 日常 on sorgDream&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>sorgDream - [CC BY-NC-SA 4.0](https://creativecommons.org/licenses/by-nc-sa/4.0/)</copyright>
    <lastBuildDate>Sat, 17 Feb 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://blog.sorgdream.com/categories/%E6%97%A5%E5%B8%B8/index.xml" rel="self" type="application/rss+xml" /><icon>https://blog.sorgdream.com/avatar.jpg</icon>
    
    
    <item>
      <title>RK-R98键盘开箱</title>
      <link>https://blog.sorgdream.com/posts/r98-keyboard/</link>
      <pubDate>Sat, 17 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://blog.sorgdream.com/posts/r98-keyboard/</guid>
      <description><![CDATA[<h2 id="为什么要买这个键盘">为什么要买这个键盘</h2>
<p>因为刷b站的时候看到一个<a href="https://www.bilibili.com/video/BV1nw411C71Z/">Cmake入门视频</a>，讲的不错，通俗易懂，当然关键不在此，主要是想知道up的键盘，看见评论区有和我一样想法的，随即买了这款键盘</p>
<p>虽然笔记本的薄膜键盘不错，敲起来速度很快，但还是想体验下机械键盘的手感</p>
<p><strong>至于为什么选择这个颜色</strong></p>
<p>当然是别的颜色都没货(划掉)</p>
<h2 id="主要配置">主要配置</h2>
<p>这里只列出了我买的，其他的自己上<a href="https://3.cn/-1VyB2zu">京东</a>看吧</p>
<table>
<thead>
<tr>
<th>连接方式</th>
<th>有线/2.4G/蓝牙</th>
</tr>
</thead>
<tbody>
<tr>
<td>键帽</td>
<td>PBT原厂拼色</td>
</tr>
<tr>
<td>轴体</td>
<td>烟雨轴/TTC钢铁轴</td>
</tr>
<tr>
<td>声音包</td>
<td>PORON棉/ixpe轴下垫/底棉/硅胶</td>
</tr>
<tr>
<td>PCBA</td>
<td>单键开槽</td>
</tr>
<tr>
<td>电池</td>
<td>7200MA锂电池</td>
</tr>
<tr>
<td>结构</td>
<td>Gasket结构(软弹型)</td>
</tr>
<tr>
<td>插拔</td>
<td>全键轴座插拔</td>
</tr>
<tr>
<td>卫星轴</td>
<td>R87卫星轴(升级款)</td>
</tr>
</tbody>
</table>
<p>京东原价259,减了20</p>
<h3 id="轴体">轴体</h3>
<p>一共有四种轴可选，这次我选择了烟雨轴，声音听起来很不错，大键也没有弹簧音，一种麻将的感觉;比之前买的强多了</p>
<table>
<thead>
<tr>
<th>轴体</th>
<th>压力克数</th>
<th>触发行程</th>
<th>触底行程</th>
</tr>
</thead>
<tbody>
<tr>
<td>纯净轴</td>
<td>42±5g</td>
<td>2.0±0.4mm</td>
<td>3,7±0.4mm</td>
</tr>
<tr>
<td>雪皇轴</td>
<td>45±10gf</td>
<td>2.0±0.4mm</td>
<td>3.4±0.4mm</td>
</tr>
<tr>
<td>烟雨轴PRO</td>
<td>40±10gf</td>
<td>2.0±0.4mm</td>
<td>3.4±0.4mm</td>
</tr>
<tr>
<td>钢铁轴PRO</td>
<td>41±10gf</td>
<td>1.4±0.4mm</td>
<td>3.8±0.3mm</td>
</tr>
</tbody>
</table>
<h2 id="兼容性">兼容性</h2>
<p>实测在Arch下有线和2.4G能完美使用，蓝牙还没试，但应该也能用;我的内核版本是<code>6.7.4-arch1-1</code></p>
<h2 id="物流">物流</h2>
<p>不得不吐槽一下极兔的物流速度，虽然是春节，但也不用发个键盘都要走5天，从花都到钟村足足用了一天&hellip;</p>
<p>还好键盘是安全送到了</p>
<h2 id="一些题外话">一些题外话</h2>
<p>估计是中考前最后一篇文章了，等中考完再回来给大家更新</p>
<p>回老家四天没碰电脑，不知不觉就攒了90多个包，不得不说开了多线程的pacman很快</p>
<p>前几天想整理下文章目录，因为busuanzi和twikoo是和文章链接绑定的，导致阅读量和评论都没了，还好发现的及时😭</p>
]]></description>
      
    </item>
    
    
    
    <item>
      <title>将你的博客部署到雨云</title>
      <link>https://blog.sorgdream.com/posts/winter/</link>
      <pubDate>Fri, 17 Nov 2023 18:48:10 +0800</pubDate>
      
      <guid>https://blog.sorgdream.com/posts/winter/</guid>
      <description><![CDATA[<h2 id="近况">近况</h2>
<p>期中考刚考完，我也难得有时间静下心来写博客，虽然文笔不太好就是了</p>
<p>这个星期，广州跳过了秋天，直接来到了冬天，也可以说广州根本就没有春天和秋天</p>
<p>看了<a href="https://arch-linux.osrc.com/">archlinux 简明指南</a>的教程，在虚拟机试了一次后为我的物理机安装上了Arch,不得不说，aur是真的好使，很多包都能在上面找到</p>
<p>每日一滚</p>
<pre tabindex="0"><code class="language-command" data-lang="command">sudo pacman -Syu
</code></pre><p>最近半价买了一个月雨云的云服务器，学了下Nginx，把我的博客迁移到了上面</p>
<h2 id="nginx">Nginx</h2>
<p>原本想再水一篇，但想着也没什么好写的，就合并在一起</p>
<p>在你喜欢的目录创建用于存放博客的文件夹，将博客仓库<strong>git</strong>下来</p>
<pre tabindex="0"><code class="language-conf" data-lang="conf">server {
    listen 80;
    server_name test.inuya.ltd;
    root /home/blog;
    location / {
    }
}
</code></pre><p>跟之前一样，在服务器<code>/etc/nginx/conf.d</code>目录下创建<code>test.inuya.ltd.conf</code>配置文件，写入以上内容，这里我用二级域名<code>test.inuya.ltd</code>演示</p>
<p>在域名提供商添加<code>A类型</code>解析，填入你的IP，使用<code>http://test.inuya.ltd</code>即可访问博客</p>
<h2 id="https">https</h2>
<p>配置完，会有一个问题，就是无法通过https访问，现在很多博客的友联已经不再添加没有https的博客了</p>
<h3 id="ssl证书">ssl证书</h3>
<p><del>阿里云现有免费的一年ssl证书可以申请</del></p>
<p>阿里云证书现只有三个月有效期，遂更换cerbot自动续费</p>
<ol>
<li>在你的debian或基于debian的发行版上安装snap</li>
</ol>
<pre tabindex="0"><code class="language-command" data-lang="command">sudo apt install snapd
</code></pre><ol start="2">
<li>安装cerbot snap包</li>
</ol>
<pre tabindex="0"><code class="language-command" data-lang="command">sudo snap install --classic certbot
</code></pre><ol start="3">
<li>准备 Certbot 命令</li>
</ol>
<pre tabindex="0"><code class="language-command" data-lang="command">sudo ln -s /snap 
</code></pre><ol start="4">
<li>获取证书，这里选择手动配置</li>
</ol>
<pre tabindex="0"><code class="language-command" data-lang="command">sudo certbot certonly --nginx
</code></pre><ol start="5">
<li>测试下自动续费</li>
</ol>
<pre tabindex="0"><code class="language-command" data-lang="command">sudo certbot renew --dry-run
</code></pre><p>证书应位于<code>/etc/letsencrypt/live</code>在Nginx中填入即可</p>
<p>其他发行版也可参考<a href="https://certbot.eff.org/instructions?">certbot instructions</a>，选择对应的发行版即可</p>
<h3 id="配置">配置</h3>
<p>在原本的<code>test.inuya.ltd.conf</code>的配置中添加以下内容</p>
<pre tabindex="0"><code class="language-conf" data-lang="conf">server {
    listen 443 ssl;
    #配置HTTPS监听端口443。
    server_name test.inuya.ltd; #将test.inuya.ltd换成证书绑定的域名
    root html;
    index index.html index.htm;
    ssl_certificate cert/test.inuya.ltd.pem;  #将test.inuya.ltd.pem换成自己的证书
    ssl_certificate_key cert/test.inuya.ltd.key; #将test.inuya.ltd换成自己的证书密钥
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    #表示使用的加密套件的类型。
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #表示使用的TLS协议的类型。
    ssl_prefer_server_ciphers on;
    location / {
        root /home/blog;  #站点目录。
        index index.html index.htm;
    }
}
</code></pre><p>使用<code>systemctl restart nginx</code>重启Nginx，尝试带https访问网址</p>
<h3 id="重定向">重定向</h3>
<p>如果想让所有的http访问都301重定向到https,可以在80端口的配置中添加一句<code>return 301 https://$server_name$request_uri;</code></p>
<p>就像这样</p>
<pre tabindex="0"><code class="language-conf" data-lang="conf">server {
    listen 80;
    server_name test.inuya.ltd;
    return 301 https://$server_name$request_uri;
    root /home/blog;
    location / {
    }
}
</code></pre><h2 id="主页">主页</h2>
<p>域名只解析博客太浪费了，于是搭建了我的主页</p>
<p>修改自<a href="https://github.com/noisky/Homepage">饭饭&rsquo;s Homepage 2.0</a></p>
<p>主页: <a href="https://inuya.ltd">https://inuya.ltd</a></p>
<h2 id="twikoo评论">Twikoo评论</h2>
<p>都有服务器了，还用什么valine,早就听闻twikoo配置方便，今天一用，相见恨晚</p>
<p>我是用的是docker部署，docker run时加上<code>--restart=always</code>设置自启</p>
<p>部署完后访问<code>http://&lt;ip&gt;:8080</code>，返回值如下</p>
<pre tabindex="0"><code>&#34;Twikoo 云函数运行正常，请参考 https://twikoo.js.org/frontend.html 完成前端的配置&#34;
</code></pre><h2 id="nginx反向代理">Nginx反向代理</h2>
<p>因该是这么叫吧</p>
<p>部署到服务器后，发现评论系统被拦截了，因为博客是https，但评论只有http,所以被拦截</p>
<p>到域名服务商新建一条<code>A记录</code>解析，填入你的IP</p>
<p>在<code>/etc/nginx/conf.d</code>新建配置文件</p>
<pre tabindex="0"><code class="language-conf" data-lang="conf">server {
    listen 80;
    server_name twikoo.inuya.ltd; # 设置的域名
    return 301 https://$server_name$request_uri; # 重定向至HTTPS
    location / {
    }
}
 
server {
    listen 443 ssl;
    server_name twikoo.inuya.ltd;
    ssl_certificate cert/twikoo.inuya.ltd.pem;  # 配置证书
    ssl_certificate_key cert/twikoo.inuya.ltd.key;
    ssl_session_timeout 5m;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
    # 表示使用的加密套件的类型。
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # 表示使用的TLS协议的类型。
    ssl_prefer_server_ciphers on;
    location / {
        proxy_pass  http://localhost:8080; # 反向代理至8080端口
    }
}
</code></pre><p><code>systemctl restart nginx</code>重启Nginx，尝试使用域名访问</p>
<h2 id="cdn">CDN</h2>
<p>最近博客莫名延迟变高，甚至到了无法访问的地步，于是想着给博客套个CDN加速一下;正好雨云有免费的CDN可用</p>
<p>在雨云创建一个新的CDN,如购买了雨云的产品(云服务器/虚拟主机)可以免费使用。</p>
<p>创建完后复制生成的网址到域名注册商添加<code>CNAME</code>，这里为了方便直接使用<code>*.inuya.ltd</code>泛解析</p>
<h2 id="题外话">题外话</h2>
<p>博客第一次有人主动申请友链，还是蛮激动的</p>
<p>如果有急事可以用<code>inuya@foxmail.com</code>联系我，因为是腾讯的邮箱所以可以微信提醒，回复的比较及时</p>
<h3 id="参考">参考</h3>
<ul>
<li><a href="https://blog.csdn.net/qq_37960603/article/details/112371339">Nginx：Nginx添加SSL实现HTTPS访问</a></li>
<li><a href="https://blog.csdn.net/HD243608836/article/details/112861186">nginx开启ssl并把http重定向到https的两种方式</a></li>
<li><a href="https://blog.csdn.net/weixin_38312502/article/details/101780412">nuxt.js项目部署到linux服务器，并使用域名访问</a></li>
<li><a href="https://www.luxiyue.com/server/%e4%b8%aa%e4%ba%ba%e6%9c%8d%e5%8a%a1%e5%99%a8%e4%b8%8a%e9%83%a8%e7%bd%b2%e5%8d%9a%e5%ae%a2%e8%af%84%e8%ae%ba%e7%b3%bb%e7%bb%9f%ef%bc%9atwikoo/">个人服务器上部署博客评论系统：Twikoo</a></li>
<li><a href="https://blog.csdn.net/Hu_wen/article/details/110521804">Docker 容器设置自启动</a></li>
<li><a href="https://twikoo.js.org/">Twikoo文档</a></li>
<li><a href="https://certbot.eff.org/instructions?ws=nginx&amp;os=debianbuster">Certbot 说明</a></li>
</ul>
]]></description>
      
    </item>
    
    
  </channel>
</rss>
